plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'dev.hilla' version '2.5.5'
}

group = 'com.example'
version = '0.0.1'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('hillaVersion', "2.5.5")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'dev.hilla:hilla-react-spring-boot-starter'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.mockito:mockito-core:3.12.4'
}

dependencyManagement {
    imports {
        mavenBom "dev.hilla:hilla-bom:${hillaVersion}"
    }
}

task copyVaadinIcons(type: Copy) {
    from('node_modules/@vaadin/icons/assets/') {
        include '**/*.woff'
        include '**/*.woff2'
        include '**/*.png'
        include '**/*.svg'
    }
    into 'src/main/resources/static/icons/'
}

// Include copied icons in the resources
sourceSets {
    main {
        resources {
            srcDirs = ["src/main/resources"]
        }
    }
}

// Ensure copying of icons task before building
assemble.dependsOn(copyVaadinIcons)

processResources {
    dependsOn copyVaadinIcons
}

tasks.named('test') {
    useJUnitPlatform()
}

hilla {
    productionMode = true
}

application {
    apply plugin: 'application'
    applicationDefaultJvmArgs = ['-Dgreeting.language=en']
    mainClass =  'com.example.cgi_demo_app.CgiDemoAppApplication'
}

// Copy only necessary Vaadin icon files to resources directory

